import time
import pandas as pd
from datetime import datetime
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait, Select
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager

# üîπ Configurar navegador
chrome_options = Options()
chrome_options.add_argument("--no-sandbox")
chrome_options.add_argument("--disable-dev-shm-usage")

# üîπ Iniciar WebDriver
service = Service(ChromeDriverManager().install())
driver = webdriver.Chrome(service=service, options=chrome_options)

# üîπ URL de la p√°gina de SELAE
url = "https://www.loteriasyapuestas.es/es/resultados/loteria-nacional"
driver.get(url)

# üîπ Esperar a que la p√°gina cargue completamente
time.sleep(5)
wait = WebDriverWait(driver, 10)

# üîπ Cerrar el popup de cookies si aparece
try:
    boton_cookies = wait.until(EC.element_to_be_clickable((By.XPATH, '//button[contains(text(), "Solo usar cookies necesarias")]')))
    boton_cookies.click()
    print("‚úÖ Popup de cookies cerrado.")
except:
    print("‚ö†Ô∏è No se encontr√≥ el popup de cookies o ya estaba cerrado.")

# üîπ Funci√≥n para seleccionar una fecha en el calendario
def seleccionar_fecha(id_input, dia, mes, anio):
    fecha_input = driver.find_element(By.ID, id_input)
    fecha_input.click()
    time.sleep(1)
    
    # Seleccionar mes y a√±o
    select_mes = Select(driver.find_element(By.XPATH, '//*[@id="ui-datepicker-div"]/div/div/select[1]'))
    select_mes.select_by_value(str(mes))
    select_anio = Select(driver.find_element(By.XPATH, '//*[@id="ui-datepicker-div"]/div/div/select[2]'))
    select_anio.select_by_value(str(anio))
    
    # Seleccionar d√≠a
    dia_elemento = driver.find_element(By.XPATH, f'//a[text()="{dia}"]')
    dia_elemento.click()

# üîπ Seleccionar fecha DESDE (1 de enero de 1995)
seleccionar_fecha("qa_resultadoSorteo-buscador-fechaDesde-LNAC", 1, 0, 1995)  # Meses van de 0 a 11
print("‚úÖ Fecha DESDE establecida: 01/01/1995")

# üîπ Seleccionar fecha HASTA (hoy)
hoy = datetime.now()
seleccionar_fecha("qa_resultadoSorteo-buscador-fechaHasta-LNAC", hoy.day, hoy.month - 1, hoy.year)
print(f"‚úÖ Fecha HASTA establecida: {hoy.strftime('%d/%m/%Y')}")

# üîπ Hacer clic en el bot√≥n "Buscar"
try:
    boton_buscar = wait.until(EC.element_to_be_clickable((By.XPATH, '//button[contains(text(), "Buscar")]')))
    boton_buscar.click()
    print("‚úÖ Bot√≥n 'Buscar' presionado.")

    # üîπ Esperar hasta que aparezcan los resultados
    wait.until(EC.presence_of_element_located((By.CLASS_NAME, "r-resultados-buscador")))
    print("‚úÖ Resultados de sorteos cargados.")
except:
    print("‚ùå No se encontraron sorteos despu√©s de la b√∫squeda.")
    driver.quit()
    exit()

# üîπ Obtener contenedor principal de resultados
contenedor_resultados = driver.find_element(By.CLASS_NAME, "r-resultados-buscador")

# üîπ Obtener todos los sorteos dentro del contenedor
sorteos = contenedor_resultados.find_elements(By.CLASS_NAME, "c-resultado-sorteo--loteria-nacional-sabado")

# Lista para almacenar los datos
resultados = []

# üîπ Iterar sobre cada sorteo y extraer la informaci√≥n
for sorteo in sorteos:
    try:
        # üìÖ Extraer la fecha del sorteo
        fecha_sorteo = sorteo.find_element(By.XPATH, './/p[contains(@id, "qa_resultadoSorteo-fecha")]').text.strip()
        
        # üîπ Buscar la tabla de premios dentro del sorteo
        try:
            tabla = sorteo.find_element(By.XPATH, './/table[contains(@id, "qa_resultadoSorteo-escrutinio")]')
            filas = tabla.find_elements(By.TAG_NAME, 'tr')

            # Iterar sobre cada fila de la tabla (omitir encabezados)
            for fila in filas[1:]:
                columnas = fila.find_elements(By.TAG_NAME, 'td')
                if len(columnas) >= 2:
                    categoria = columnas[0].text.strip()
                    premio = columnas[1].text.strip()
                    
                    # üîπ Buscar y hacer clic en el bot√≥n de agraciados si existe
                    try:
                        boton_agraciados = columnas[2].find_element(By.TAG_NAME, 'a')
                        boton_agraciados.click()
                        time.sleep(2)  # Esperar a que cargue la informaci√≥n
                        
                        # Extraer informaci√≥n de agraciados
                        ubicaciones = driver.find_elements(By.CLASS_NAME, 'ubicaciones')
                        for ubicacion in ubicaciones:
                            direccion = ubicacion.find_element(By.XPATH, './/span[contains(text(), "Direcci√≥n:")]/following-sibling::span').text.strip()
                            poblacion = ubicacion.find_element(By.XPATH, './/span[contains(text(), "Poblaci√≥n:")]/following-sibling::span').text.strip()
                            provincia = ubicacion.find_element(By.XPATH, './/span[contains(text(), "Provincia:")]/following-sibling::span').text.strip()
                            codigo_postal = ubicacion.find_element(By.XPATH, './/span[contains(text(), "C√≥digo Postal:")]/following-sibling::span').text.strip()
                            telefono = ubicacion.find_element(By.XPATH, './/span[contains(text(), "Tel√©fono:")]/following-sibling::span').text.strip()

                            print(f"üìç {categoria} - {direccion}, {poblacion}, {provincia} ({codigo_postal}), Tel: {telefono}")
                            
                            resultados.append([fecha_sorteo, categoria, premio, direccion, poblacion, provincia, codigo_postal, telefono])
                        
                        # Cerrar el modal
                        driver.find_element(By.CLASS_NAME, "ui-dialog-titlebar-close").click()
                        time.sleep(1)
                    except:
                        resultados.append([fecha_sorteo, categoria, premio, "N/A", "N/A", "N/A", "N/A", "N/A"])
        except:
            print(f"‚ö†Ô∏è No se encontr√≥ tabla de premios para el sorteo {fecha_sorteo}")
    except Exception as e:
        print(f"‚ö†Ô∏è Error extrayendo datos del sorteo: {e}")

# üîπ Convertir a DataFrame de pandas y mostrar en consola
df = pd.DataFrame(resultados, columns=["Fecha Sorteo", "Categor√≠a", "Premio", "Direcci√≥n", "Poblaci√≥n", "Provincia", "C√≥digo Postal", "Tel√©fono"])
print("\nüìä Datos extra√≠dos:\n", df)

# üîπ Guardar en CSV
df.to_csv('data/raw/resultados_loteria_nacional.csv', index=False)
print("‚úÖ Datos guardados en 'data/raw/resultados_loteria_nacional.csv'.")

# üîπ Cerrar el navegador
driver.quit()
